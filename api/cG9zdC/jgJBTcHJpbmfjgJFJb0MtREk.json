{"title":"【Springg】IoC&DI","date":"2019-08-31T14:16:46.000Z","thumbnail":null,"link":"post/【Spring】IoC-DI","tags":["spring"],"categories":["奇客工具"],"updated":"2019-08-31T14:20:06.342Z","content":"<h2 id=\"1-spring概述\">1. spring概述<a href=\"post/【Spring】IoC-DI#1-spring概述\"></a></h2><h3 id=\"1-1-Spring是什么（理解）\">1.1 Spring是什么（理解）<a href=\"post/【Spring】IoC-DI#1-1-Spring是什么（理解）\"></a></h3><p>Spring是分层的 Java SE/EE应用 full-stack 轻量级开源框架，以 IoC（Inverse Of Control：反转控制）和 AOP（Aspect Oriented Programming：面向切面编程）为内核。</p>\n<p>提供了展现层 SpringMVC和持久层 Spring JDBCTemplate以及业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的Java EE 企业应用开源框架</p>\n<h3 id=\"1-2-Spring的优势（理解）\">1.2 Spring的优势（理解）<a href=\"post/【Spring】IoC-DI#1-2-Spring的优势（理解）\"></a></h3><p>方便解耦，简化开发</p>\n<p>AOP 编程的支持</p>\n<p>声明式事务的支持</p>\n<p>方便程序的测试</p>\n<h3 id=\"1-3-Spring的体系结构（了解）\">1.3 Spring的体系结构（了解）<a href=\"post/【Spring】IoC-DI#1-3-Spring的体系结构（了解）\"></a></h3><p><img src=\"https://i.loli.net/2019/08/29/UQBdmMKcT9tuypb.png\" alt class=\"article-img\"></p>\n<h2 id=\"2-spring快速入门\">2. spring快速入门<a href=\"post/【Spring】IoC-DI#2-spring快速入门\"></a></h2><h3 id=\"2-1-Spring程序开发步骤\">2.1 Spring程序开发步骤<a href=\"post/【Spring】IoC-DI#2-1-Spring程序开发步骤\"></a></h3><p><img src=\"https://i.loli.net/2019/08/29/4IWLgz7l8dBaRQh.png\" alt class=\"article-img\"></p>\n<p>①导入 Spring 开发的基本包坐标</p>\n<p>②编写 Dao 接口和实现类</p>\n<p>③创建 Spring 核心配置文件</p>\n<p>④在 Spring 配置文件中配置 UserDaoImpl</p>\n<p>⑤使用 Spring 的 API 获得 Bean 实例</p>\n<h3 id=\"2-2-导入Spring开发的基本包坐标\">2.2 导入Spring开发的基本包坐标<a href=\"post/【Spring】IoC-DI#2-2-导入Spring开发的基本包坐标\"></a></h3><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">spring.version</span>&gt;</span>5.0.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--导入spring的context坐标，context依赖core、beans、expression--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"2-3-编写Dao接口和实现类\">2.3 编写Dao接口和实现类<a href=\"post/【Spring】IoC-DI#2-3-编写Dao接口和实现类\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserDao</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;  </span><br><span class=\"line\">        <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        \tSystem.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"2-4-创建Spring核心配置文件\">2.4 创建Spring核心配置文件<a href=\"post/【Spring】IoC-DI#2-4-创建Spring核心配置文件\"></a></h3><p>在类路径下（resources）创建applicationContext.xml配置文件</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span> ?&gt;</span><br><span class=\"line\">&lt;beans xmlns=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span>             \t\t   xmlns:xsi=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span><br><span class=\"line\">xsi:schemaLocation=<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    http://www.springframework.org/schema/beans      \t             http://www.springframework.org/schema/beans/spring-beans.xsd\"</span>&gt;</span><br><span class=\"line\">&lt;/beans&gt;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"2-5-在Spring配置文件中配置UserDaoImpl\">2.5 在Spring配置文件中配置UserDaoImpl<a href=\"post/【Spring】IoC-DI#2-5-在Spring配置文件中配置UserDaoImpl\"></a></h3><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span>             \t\t   <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/beans      \t             http://www.springframework.org/schema/beans/spring-beans.xsd\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"2-6-使用Spring的API获得Bean实例\">2.6 使用Spring的API获得Bean实例<a href=\"post/【Spring】IoC-DI#2-6-使用Spring的API获得Bean实例\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tApplicationContext applicationContext = <span class=\"keyword\">new</span>  </span><br><span class=\"line\">             ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);</span><br><span class=\"line\">             UserDao userDao = (UserDao) applicationContext.getBean(<span class=\"string\">\"userDao\"</span>);   \t\t\t\t userDao.save();</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"3-Spring配置文件\">3. Spring配置文件<a href=\"post/【Spring】IoC-DI#3-Spring配置文件\"></a></h2><h3 id=\"3-1-Bean标签基本配置\">3.1 Bean标签基本配置<a href=\"post/【Spring】IoC-DI#3-1-Bean标签基本配置\"></a></h3><p>用于配置对象交由Spring 来创建。</p>\n<p>默认情况下它调用的是类中的无参构造函数，如果没有无参构造函数则不能创建成功。</p>\n<p>基本属性：</p>\n<p>id：Bean实例在Spring容器中的唯一标识</p>\n<p>class：Bean的全限定名称</p>\n<h3 id=\"3-2-Bean标签范围配置\">3.2 Bean标签范围配置<a href=\"post/【Spring】IoC-DI#3-2-Bean标签范围配置\"></a></h3><p>scope:指对象的作用范围，取值如下： </p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>取值范围</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>singleton</td>\n<td>默认值，单例的</td>\n</tr>\n<tr>\n<td>prototype</td>\n<td>多例的</td>\n</tr>\n<tr>\n<td>request</td>\n<td>WEB   项目中，Spring   创建一个   Bean   的对象，将对象存入到   request   域中</td>\n</tr>\n<tr>\n<td>session</td>\n<td>WEB   项目中，Spring   创建一个   Bean   的对象，将对象存入到   session   域中</td>\n</tr>\n<tr>\n<td>global   session</td>\n<td>WEB   项目中，应用在   Portlet   环境，如果没有   Portlet   环境那么globalSession   相当于   session</td>\n</tr>\n</tbody></table></div></div>\n<p>1）当scope的取值为singleton时</p>\n<p>​      Bean的实例化个数：1个</p>\n<p>​      Bean的实例化时机：当Spring核心文件被加载时，实例化配置的Bean实例</p>\n<p>​      Bean的生命周期：</p>\n<p>对象创建：当应用加载，创建容器时，对象就被创建了</p>\n<p>对象运行：只要容器在，对象一直活着</p>\n<p>对象销毁：当应用卸载，销毁容器时，对象就被销毁了</p>\n<p>2）当scope的取值为prototype时</p>\n<p>​      Bean的实例化个数：多个</p>\n<p>​      Bean的实例化时机：当调用getBean()方法时实例化Bean</p>\n<p>对象创建：当使用对象时，创建新的对象实例</p>\n<p>对象运行：只要对象在使用中，就一直活着</p>\n<p>对象销毁：当对象长时间不用时，被 Java 的垃圾回收器回收了</p>\n<h3 id=\"3-3-Bean生命周期配置\">3.3 Bean生命周期配置<a href=\"post/【Spring】IoC-DI#3-3-Bean生命周期配置\"></a></h3><p>init-method：指定类中的初始化方法名称</p>\n<p>destroy-method：指定类中销毁方法名称</p>\n<h3 id=\"3-4-Bean实例化三种方式\">3.4 Bean实例化三种方式<a href=\"post/【Spring】IoC-DI#3-4-Bean实例化三种方式\"></a></h3><p>1） 使用无参构造方法实例化（<strong>常用</strong>）</p>\n<p>​      它会根据默认无参构造方法来创建类对象，如果bean中没有默认无参构造函数，将会创建失败</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>2） 工厂静态方法实例化</p>\n<p>​      工厂的静态方法返回Bean实例</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StaticFactoryBean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> UserDao <span class=\"title\">createUserDao</span><span class=\"params\">()</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> UserDaoImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.factory.StaticFactoryBean\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">factory-method</span>=<span class=\"string\">\"createUserDao\"</span> /&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>3） 工厂实例方法实例化</p>\n<p>​      工厂的非静态方法返回Bean实例</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DynamicFactoryBean</span> </span>&#123;  </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> UserDao <span class=\"title\">createUserDao</span><span class=\"params\">()</span></span>&#123;        </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> UserDaoImpl(); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"factoryBean\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.factory.DynamicFactoryBean\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">factory-bean</span>=<span class=\"string\">\"factoryBean\"</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">\"createUserDao\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p><strong>应用场景</strong>：JDBC获得Connation需要先创建DriverMananger对象</p>\n<h3 id=\"3-5-Bean的依赖注入入门\">3.5 Bean的依赖注入入门<a href=\"post/【Spring】IoC-DI#3-5-Bean的依赖注入入门\"></a></h3><p>①创建 UserService，UserService 内部在调用 UserDao的save() 方法</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         ApplicationContext applicationContext = <span class=\"keyword\">new</span> </span><br><span class=\"line\">                 ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);       \t           UserDao userDao = (UserDao) applicationContext.getBean(<span class=\"string\">\"userDao\"</span>);\t</span><br><span class=\"line\">          userDao.save();</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>②将 UserServiceImpl 的创建权交给 Spring</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.service.impl.UserServiceImpl\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>③从 Spring 容器中获得 UserService 进行操作</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationContext applicationContext = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);</span><br><span class=\"line\">UserService userService = (UserService) applicationContext.getBean(<span class=\"string\">\"userService\"</span>);</span><br><span class=\"line\">userService.save();</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"3-6-Bean的依赖注入概念\">3.6 Bean的依赖注入概念<a href=\"post/【Spring】IoC-DI#3-6-Bean的依赖注入概念\"></a></h3><p>依赖注入（Dependency Injection）：它是 Spring 框架核心 IOC 的具体实现。</p>\n<p>在编写程序时，通过控制反转，把对象的创建交给了 Spring，但是代码中不可能出现没有依赖的情况。</p>\n<p>IOC 解耦只是降低他们的依赖关系，但不会消除。例如：业务层仍会调用持久层的方法。</p>\n<p><strong>那这种业务层和持久层的依赖关系，在使用 Spring 之后，就让 Spring 来维护了。</strong></p>\n<p><strong>简单的说，就是坐等框架把持久层对象传入业务层，而不用我们自己去获取</strong></p>\n<h3 id=\"3-7-Bean的依赖注入方式\">3.7 Bean的依赖注入方式<a href=\"post/【Spring】IoC-DI#3-7-Bean的依赖注入方式\"></a></h3><p>①构造方法</p>\n<p>​      创建有参构造</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">ApplicationContext applicationContext = <span class=\"keyword\">new</span> </span><br><span class=\"line\">                 ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);       UserDao userDao = (UserDao) applicationContext.getBean(<span class=\"string\">\"userDao\"</span>);    </span><br><span class=\"line\">          userDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>​      配置Spring容器调用有参构造时进行注入</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.service.impl.UserServiceImpl\"</span>&gt;</span>      \t\t   \t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>②set方法</p>\n<p>​      在UserServiceImpl中添加setUserDao方法</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDao userDao;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span><span class=\"params\">(UserDao userDao)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.userDao = userDao;  </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;      </span><br><span class=\"line\">   \t\t userDao.save();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>​      配置Spring容器调用set方法进行注入</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.service.impl.UserServiceImpl\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>set方法:P命名空间注入</p>\n<p>​      P命名空间注入本质也是set方法注入，但比起上述的set方法注入更加方便，主要体现在配置文件中，如下：</p>\n<p>​      首先，需要引入P命名空间：</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:p=\"http://www.springframework.org/schema/p\"</span><br></pre></td></tr></table></div></figure>\n\n<p>其次，需要修改注入方式</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.service.impl.UserServiceImpl\"</span> <span class=\"attr\">p:userDao-</span></span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"3-8-Bean的依赖注入的数据类型\">3.8 Bean的依赖注入的数据类型<a href=\"post/【Spring】IoC-DI#3-8-Bean的依赖注入的数据类型\"></a></h3><p>上面的操作，都是注入的引用Bean，处了对象的引用可以注入，普通数据类型，集合等都可以在容器中进行注入。</p>\n<p>注入数据的三种数据类型 </p>\n<p>普通数据类型</p>\n<p>引用数据类型</p>\n<p>集合数据类型</p>\n<p>其中引用数据类型，此处就不再赘述了，之前的操作都是对UserDao对象的引用进行注入的，下面将以set方法注入为例，演示普通数据类型和集合数据类型的注入。</p>\n<p><strong>Bean的依赖注入的数据类型</strong></p>\n<p>（1）普通数据类型的注入</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String company;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCompany</span><span class=\"params\">(String company)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.company = company;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(company+<span class=\"string\">\"===\"</span>+age);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"company\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"传智播客\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"15\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>（2）集合数据类型（List<string>）的注入</string></p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List&lt;String&gt; strList;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStrList</span><span class=\"params\">(List&lt;String&gt; strList)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.strList = strList;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(strList);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"strList\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>aaa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>bbb<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>ccc<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>（3）集合数据类型（List<user>）的注入</user></p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List&lt;User&gt; userList;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserList</span><span class=\"params\">(List&lt;User&gt; userList)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.userList = userList;  </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSystem.out.println(userList);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"u1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"u2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userList\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"u1\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"u2\"</span>/&gt;</span>       </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>（4）集合数据类型（ Map&lt;String,User&gt; ）的注入</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String,User&gt; userMap;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserMap</span><span class=\"params\">(Map&lt;String, User&gt; userMap)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.userMap = userMap;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;      </span><br><span class=\"line\">\tSystem.out.println(userMap);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"u1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"u2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.domain.User\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userMap\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span>            </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"user1\"</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"u1\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"user2\"</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"u2\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>（5）集合数据类型（Properties）的注入</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Properties properties;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProperties</span><span class=\"params\">(Properties properties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.properties = properties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(properties);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"UserDao save method running....\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.itheima.dao.impl.UserDaoImpl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"properties\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"p1\"</span>&gt;</span>aaa<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"p2\"</span>&gt;</span>bbb<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span> </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"p3\"</span>&gt;</span>ccc<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"3-9-引入其他配置文件（分模块开发）\">3.9 引入其他配置文件（分模块开发）<a href=\"post/【Spring】IoC-DI#3-9-引入其他配置文件（分模块开发）\"></a></h3><p>实际开发中，Spring的配置内容非常多，这就导致Spring配置很繁杂且体积很大，所以，可以将部分配置拆解到其他配置文件中，而在Spring主配置文件通过import标签进行加载</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"applicationContext-xxx.xml\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"4-spring相关API\">4. spring相关API<a href=\"post/【Spring】IoC-DI#4-spring相关API\"></a></h2><h3 id=\"4-1-ApplicationContext的继承体系\">4.1 ApplicationContext的继承体系<a href=\"post/【Spring】IoC-DI#4-1-ApplicationContext的继承体系\"></a></h3><p><img src=\"https://i.loli.net/2019/08/29/o6h1qTza59NIeD8.png\" alt class=\"article-img\"></p>\n<p>BeanFactory是最上层接口。</p>\n<p>applicationContext：接口类型，代表应用上下文，可以通过其实例获得 Spring 容器中的 Bean 对象</p>\n<p>ApplicationContext实现了BeanFactory接口,所以功能会强大一些,平常我们用ApplicationContext</p>\n<h3 id=\"4-2-ApplicationContext的实现类\">4.2 ApplicationContext的实现类<a href=\"post/【Spring】IoC-DI#4-2-ApplicationContext的实现类\"></a></h3><p>1）ClassPathXmlApplicationContext </p>\n<p>​      它是从类的根路径下加载配置文件 推荐使用这种</p>\n<p>2）FileSystemXmlApplicationContext </p>\n<p>​      它是从磁盘路径上加载配置文件，配置文件可以在磁盘的任意位置。</p>\n<p>3）AnnotationConfigApplicationContext</p>\n<p>​      当使用注解配置容器对象时，需要使用此类来创建 spring 容器。它用来读取注解。</p>\n<h3 id=\"4-3-getBean-方法使用\">4.3 getBean()方法使用<a href=\"post/【Spring】IoC-DI#4-3-getBean-方法使用\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getBean</span><span class=\"params\">(String name)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;  </span><br><span class=\"line\">\tassertBeanFactoryActive();   </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> getBeanFactory().getBean(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(Class&lt;T&gt; requiredType)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;   \t\t\t    \tassertBeanFactoryActive();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> getBeanFactory().getBean(requiredType);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>其中，当参数的数据类型是字符串时，表示根据Bean的id从容器中获得Bean实例，返回是Object，需要强转。</p>\n<p>当参数的数据类型是Class类型时，表示根据类型从容器中匹配Bean实例，当容器中相同类型的Bean有多个时，则此方法会报错</p>\n<p><strong>getBean()方法使用</strong></p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationContext applicationContext = <span class=\"keyword\">new</span> </span><br><span class=\"line\">            ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);</span><br><span class=\"line\">  UserService userService1 = (UserService) applicationContext.getBean(<span class=\"string\">\"userService\"</span>);</span><br><span class=\"line\">  UserService userService2 = applicationContext.getBean(UserService.class);</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"5-Spring配置数据源\">5.Spring配置数据源<a href=\"post/【Spring】IoC-DI#5-Spring配置数据源\"></a></h2><h3 id=\"5-1-数据源（连接池）的作用\">5.1 数据源（连接池）的作用<a href=\"post/【Spring】IoC-DI#5-1-数据源（连接池）的作用\"></a></h3><p>数据源(连接池)是提高程序性能如出现的</p>\n<p>事先实例化数据源，初始化部分连接资源</p>\n<p>使用连接资源时从数据源中获取</p>\n<p>使用完毕后将连接资源归还给数据源</p>\n<p>常见的数据源(连接池)：DBCP、C3P0、BoneCP、Druid等</p>\n<p><strong>开发步骤</strong></p>\n<p>①导入数据源的坐标和数据库驱动坐标</p>\n<p>②创建数据源对象</p>\n<p>③设置数据源的基本连接数据</p>\n<p>④使用数据源获取连接资源和归还连接资源</p>\n<h3 id=\"5-2-数据源的手动创建\">5.2 数据源的手动创建<a href=\"post/【Spring】IoC-DI#5-2-数据源的手动创建\"></a></h3><p>①导入c3p0和druid的坐标</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- C3P0连接池 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Druid连接池 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.10<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>①导入mysql数据库驱动坐标</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- mysql驱动 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.39<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>②创建C3P0连接池</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testC3P0</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//创建数据源</span></span><br><span class=\"line\">\tComboPooledDataSource dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource();</span><br><span class=\"line\">\t<span class=\"comment\">//设置数据库连接参数</span></span><br><span class=\"line\">    dataSource.setDriverClass(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);    \t               \t               dataSource.setJdbcUrl(<span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>);</span><br><span class=\"line\">    dataSource.setUser(<span class=\"string\">\"root\"</span>);</span><br><span class=\"line\">    dataSource.setPassword(<span class=\"string\">\"root\"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//获得连接对象</span></span><br><span class=\"line\">\tConnection connection = dataSource.getConnection();</span><br><span class=\"line\">\tSystem.out.println(connection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>②创建Druid连接池</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDruid</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建数据源</span></span><br><span class=\"line\">    DruidDataSource dataSource = <span class=\"keyword\">new</span> DruidDataSource();</span><br><span class=\"line\">    <span class=\"comment\">//设置数据库连接参数</span></span><br><span class=\"line\">    dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>); </span><br><span class=\"line\">    dataSource.setUrl(<span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>);   </span><br><span class=\"line\">    dataSource.setUsername(<span class=\"string\">\"root\"</span>);</span><br><span class=\"line\">    dataSource.setPassword(<span class=\"string\">\"root\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//获得连接对象</span></span><br><span class=\"line\">    Connection connection = dataSource.getConnection();    </span><br><span class=\"line\">    System.out.println(connection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>③提取jdbc.properties配置文件</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://localhost:3306/test</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=root</span><br></pre></td></tr></table></div></figure>\n\n<p>④读取jdbc.properties配置文件创建连接池</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testC3P0ByProperties</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//加载类路径下的jdbc.properties</span></span><br><span class=\"line\">    ResourceBundle rb = ResourceBundle.getBundle(<span class=\"string\">\"jdbc\"</span>);</span><br><span class=\"line\">    ComboPooledDataSource dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource(); </span><br><span class=\"line\">    dataSource.setDriverClass(rb.getString(<span class=\"string\">\"jdbc.driver\"</span>));   </span><br><span class=\"line\">    dataSource.setJdbcUrl(rb.getString(<span class=\"string\">\"jdbc.url\"</span>)); </span><br><span class=\"line\">    dataSource.setUser(rb.getString(<span class=\"string\">\"jdbc.username\"</span>)); </span><br><span class=\"line\">    dataSource.setPassword(rb.getString(<span class=\"string\">\"jdbc.password\"</span>));</span><br><span class=\"line\">    Connection connection = dataSource.getConnection();   </span><br><span class=\"line\">    System.out.println(connection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"5-3-Spring配置数据源\">5.3 Spring配置数据源<a href=\"post/【Spring】IoC-DI#5-3-Spring配置数据源\"></a></h3><p>可以将DataSource的创建权交由Spring容器去完成</p>\n<p>DataSource有无参构造方法，而Spring默认就是通过无参构造方法实例化对象的</p>\n<p>DataSource要想使用需要通过set方法设置数据库连接信息，而Spring可以通过set方法进行字符串注入</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>测试从容器当中获取数据源</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationContext applicationContext = <span class=\"keyword\">new</span> </span><br><span class=\"line\">           ClassPathXmlApplicationContext(<span class=\"string\">\"applicationContext.xml\"</span>);</span><br><span class=\"line\">               DataSource dataSource = (DataSource) </span><br><span class=\"line\">applicationContext.getBean(<span class=\"string\">\"dataSource\"</span>);</span><br><span class=\"line\">Connection connection = dataSource.getConnection();</span><br><span class=\"line\">System.out.println(connection);</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"5-4-抽取jdbc配置文件\">5.4 抽取jdbc配置文件<a href=\"post/【Spring】IoC-DI#5-4-抽取jdbc配置文件\"></a></h3><p>applicationContext.xml加载jdbc.properties配置文件获得连接信息。</p>\n<p>首先，需要引入context命名空间和约束路径：</p>\n<p>命名空间：xmlns:context=”<a href=\"http://www.springframework.org/schema/context&quot;\" target=\"_blank\" rel=\"noopener\">http://www.springframework.org/schema/context&quot;</a></p>\n<p>约束路径：<a href=\"http://www.springframework.org/schema/context\" target=\"_blank\" rel=\"noopener\">http://www.springframework.org/schema/context</a><br>​                       </p>\n<p>​                   <a href=\"http://www.springframework.org/schema/context/spring-context.xsd\" target=\"_blank\" rel=\"noopener\">http://www.springframework.org/schema/context/spring-context.xsd</a></p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:jdbc.properties\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"5-5-知识要点\">5.5 知识要点<a href=\"post/【Spring】IoC-DI#5-5-知识要点\"></a></h3><p>Spring容器加载properties文件</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"xx.properties\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;key&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"6-Spring注解开发\">6. Spring注解开发<a href=\"post/【Spring】IoC-DI#6-Spring注解开发\"></a></h2><h3 id=\"6-1-Spring原始注解\">6.1 Spring原始注解<a href=\"post/【Spring】IoC-DI#6-1-Spring原始注解\"></a></h3><p>Spring是轻代码而重配置的框架，配置比较繁重，影响开发效率，所以注解开发是一种趋势，注解代替xml配置文件可以简化配置，提高开发效率。 </p>\n<p>Spring原始注解主要是替代<bean>的配置</bean></p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@Component</td>\n<td>使用在类上用于实例化Bean</td>\n</tr>\n<tr>\n<td>@Controller</td>\n<td>使用在web层类上用于实例化Bean</td>\n</tr>\n<tr>\n<td>@Service</td>\n<td>使用在service层类上用于实例化Bean</td>\n</tr>\n<tr>\n<td>@Repository</td>\n<td>使用在dao层类上用于实例化Bean</td>\n</tr>\n<tr>\n<td>@Autowired</td>\n<td>使用在字段上用于根据类型依赖注入</td>\n</tr>\n<tr>\n<td>@Qualifier</td>\n<td>结合@Autowired一起使用用于根据名称进行依赖注入</td>\n</tr>\n<tr>\n<td>@Resource</td>\n<td>相当于@Autowired+@Qualifier，按照名称进行注入</td>\n</tr>\n<tr>\n<td>@Value</td>\n<td>注入普通属性</td>\n</tr>\n<tr>\n<td>@Scope</td>\n<td>标注Bean的作用范围</td>\n</tr>\n<tr>\n<td>@PostConstruct</td>\n<td>使用在方法上标注该方法是Bean的初始化方法</td>\n</tr>\n<tr>\n<td>@PreDestroy</td>\n<td>使用在方法上标注该方法是Bean的销毁方法</td>\n</tr>\n</tbody></table></div></div>\n<p><strong>注意：</strong></p>\n<p><strong>使用注解进行开发时，需要在applicationContext.xml中配置组件扫描，作用是指定哪个包及其子包下的Bean需要进行扫描以便识别使用注解配置的类、字段和方法。</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--注解的组件扫描--&gt;</span><br><span class=\"line\">&lt;context:component-scan base-package=\"com.itheima\"&gt;&lt;/context:component-scan&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用@Compont或@Repository标识UserDaoImpl需要Spring进行实例化。</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Component(\"userDao\")</span></span><br><span class=\"line\"><span class=\"meta\">@Repository</span>(<span class=\"string\">\"userDao\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    \tSystem.out.println(<span class=\"string\">\"save running... ...\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用@Compont或@Service标识UserServiceImpl需要Spring进行实例化</p>\n<p>使用@Autowired或者@Autowired+@Qulifier或者@Resource进行userDao的注入</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Component(\"userService\")</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span>(<span class=\"string\">\"userService\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*@Autowired</span></span><br><span class=\"line\"><span class=\"comment\">    @Qualifier(\"userDao\")*/</span></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span>(name=<span class=\"string\">\"userDao\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDao userDao;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;       </span><br><span class=\"line\">   \t  userDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用@Value进行字符串的注入</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span>(<span class=\"string\">\"userDao\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"注入普通数据\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String str;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String driver;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        System.out.println(driver);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"save running... ...\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用@Scope标注Bean的范围</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Scope(\"prototype\")</span></span><br><span class=\"line\"><span class=\"meta\">@Scope</span>(<span class=\"string\">\"singleton\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//此处省略代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用@PostConstruct标注初始化方法，使用@PreDestroy标注销毁方法</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"初始化方法....\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@PreDestroy</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"销毁方法.....\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"6-2-Spring新注解\">6.2 Spring新注解<a href=\"post/【Spring】IoC-DI#6-2-Spring新注解\"></a></h3><p>使用上面的注解还不能全部替代xml配置文件，还需要使用注解替代的配置如下：</p>\n<p>非自定义的Bean的配置：<bean></bean></p>\n<p>加载properties文件的配置：<a href=\"context:property-placeholder\" target=\"_blank\" rel=\"noopener\">context:property-placeholder</a></p>\n<p>组件扫描的配置：<a href=\"context:component-scan\" target=\"_blank\" rel=\"noopener\">context:component-scan</a></p>\n<p>引入其他文件：<import></import></p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@Configuration</td>\n<td>用于指定当前类是一个 Spring   配置类，当创建容器时会从该类上加载注解</td>\n</tr>\n<tr>\n<td>@ComponentScan</td>\n<td>用于指定 Spring   在初始化容器时要扫描的包。   作用和在 Spring   的 xml 配置文件中的   &lt;context:component-scan   base-package=”com.itheima”/&gt;一样</td>\n</tr>\n<tr>\n<td>@Bean</td>\n<td>使用在方法上，标注将该方法的返回值存储到   Spring   容器中</td>\n</tr>\n<tr>\n<td>@PropertySource</td>\n<td>用于加载.properties   文件中的配置</td>\n</tr>\n<tr>\n<td>@Import</td>\n<td>用于导入其他配置类</td>\n</tr>\n</tbody></table></div></div>\n<p>@Configuration</p>\n<p>@ComponentScan</p>\n<p>@Import</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(<span class=\"string\">\"com.itheima\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Import</span>(&#123;DataSourceConfiguration.class&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringConfiguration</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>@PropertySource</p>\n<p>@value</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PropertySource</span>(<span class=\"string\">\"classpath:jdbc.properties\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataSourceConfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String driver;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br></pre></td></tr></table></div></figure>\n\n<p>@Bean</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span>(name=<span class=\"string\">\"dataSource\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> DataSource <span class=\"title\">getDataSource</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> PropertyVetoException </span>&#123; </span><br><span class=\"line\">    ComboPooledDataSource dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource(); </span><br><span class=\"line\">    dataSource.setDriverClass(driver);</span><br><span class=\"line\">    dataSource.setJdbcUrl(url);</span><br><span class=\"line\">    dataSource.setUser(username);</span><br><span class=\"line\">    dataSource.setPassword(password);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataSource;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>测试加载核心配置类创建Spring容器</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAnnoConfiguration</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">ApplicationContext applicationContext = <span class=\"keyword\">new</span> </span><br><span class=\"line\">          AnnotationConfigApplicationContext(SpringConfiguration.class);    UserService userService = (UserService)    </span><br><span class=\"line\">    applicationContext.getBean(<span class=\"string\">\"userService\"</span>);</span><br><span class=\"line\">    userService.save();</span><br><span class=\"line\">    DataSource dataSource = (DataSource) </span><br><span class=\"line\">    applicationContext.getBean(<span class=\"string\">\"dataSource\"</span>);</span><br><span class=\"line\">    Connection connection = dataSource.getConnection(); </span><br><span class=\"line\">    System.out.println(connection);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"7-Spring整合Junit\">7. Spring整合Junit<a href=\"post/【Spring】IoC-DI#7-Spring整合Junit\"></a></h2><h3 id=\"7-1-原始Junit测试Spring的问题\">7.1 原始Junit测试Spring的问题<a href=\"post/【Spring】IoC-DI#7-1-原始Junit测试Spring的问题\"></a></h3><p>在测试类中，每个测试方法都有以下两行代码：</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationContext ac = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"bean.xml\"</span>);</span><br><span class=\"line\">IAccountService as = ac.getBean(<span class=\"string\">\"accountService\"</span>,IAccountService.class);</span><br></pre></td></tr></table></div></figure>\n\n<p>这两行代码的作用是获取容器，如果不写的话，直接会提示空指针异常。所以又不能轻易删掉。</p>\n<h3 id=\"7-2-上述问题解决思路\">7.2 上述问题解决思路<a href=\"post/【Spring】IoC-DI#7-2-上述问题解决思路\"></a></h3><p>让SpringJunit负责创建Spring容器，但是需要将配置文件的名称告诉它</p>\n<p>将需要进行测试Bean直接在测试类中进行注入</p>\n<h3 id=\"7-3-Spring集成Junit步骤\">7.3 Spring集成Junit步骤<a href=\"post/【Spring】IoC-DI#7-3-Spring集成Junit步骤\"></a></h3><p>①导入spring集成Junit的坐标</p>\n<p>②使用@Runwith注解替换原来的运行期</p>\n<p>③使用@ContextConfiguration指定配置文件或配置类</p>\n<p>④使用@Autowired注入需要测试的对象</p>\n<p>⑤创建测试方法进行测试</p>\n<h3 id=\"7-4-Spring集成Junit代码实现\">7.4 Spring集成Junit代码实现<a href=\"post/【Spring】IoC-DI#7-4-Spring集成Junit代码实现\"></a></h3><p>①导入spring集成Junit的坐标</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--此处需要注意的是，spring5 及以上版本要求 junit 的版本必须是 4.12 及以上--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>②使用@Runwith注解替换原来的运行期</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringJunitTest</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>③使用@ContextConfiguration指定配置文件或配置类</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"comment\">//加载spring核心配置文件</span></span><br><span class=\"line\"><span class=\"comment\">//@ContextConfiguration(value = &#123;\"classpath:applicationContext.xml\"&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">//加载spring核心配置类</span></span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(classes = &#123;SpringConfiguration.class&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringJunitTest</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>④使用@Autowired注入需要测试的对象</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(classes = &#123;SpringConfiguration.class&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringJunitTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>⑤创建测试方法进行测试</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(classes = &#123;SpringConfiguration.class&#125;)\u000b<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringJunitTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUserService</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   \t userService.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>Spring集成Junit步骤</p>\n<p>①导入spring集成Junit的坐标</p>\n<p>②使用@Runwith注解替换原来的运行期</p>\n<p>③使用@ContextConfiguration指定配置文件或配置类</p>\n<p>④使用@Autowired注入需要测试的对象</p>\n<p>⑤创建测试方法进行测试</p>\n","prev":{"title":"【Spring】AOP","link":"post/【Spring】AOP"},"next":{"title":"【刨根问底】HashMap","link":"post/【刨根问底】HashMap"},"plink":"https://gmahsm.github.io/post/【Spring】IoC-DI/","toc":[{"title":"1. spring概述","id":"1-spring概述","index":"1","children":[{"title":"1.1 Spring是什么（理解）","id":"1-1-Spring是什么（理解）","index":"1.1"},{"title":"1.2 Spring的优势（理解）","id":"1-2-Spring的优势（理解）","index":"1.2"},{"title":"1.3 Spring的体系结构（了解）","id":"1-3-Spring的体系结构（了解）","index":"1.3"}]},{"title":"2. spring快速入门","id":"2-spring快速入门","index":"2","children":[{"title":"2.1 Spring程序开发步骤","id":"2-1-Spring程序开发步骤","index":"2.1"},{"title":"2.2 导入Spring开发的基本包坐标","id":"2-2-导入Spring开发的基本包坐标","index":"2.2"},{"title":"2.3 编写Dao接口和实现类","id":"2-3-编写Dao接口和实现类","index":"2.3"},{"title":"2.4 创建Spring核心配置文件","id":"2-4-创建Spring核心配置文件","index":"2.4"},{"title":"2.5 在Spring配置文件中配置UserDaoImpl","id":"2-5-在Spring配置文件中配置UserDaoImpl","index":"2.5"},{"title":"2.6 使用Spring的API获得Bean实例","id":"2-6-使用Spring的API获得Bean实例","index":"2.6"}]},{"title":"3. Spring配置文件","id":"3-Spring配置文件","index":"3","children":[{"title":"3.1 Bean标签基本配置","id":"3-1-Bean标签基本配置","index":"3.1"},{"title":"3.2 Bean标签范围配置","id":"3-2-Bean标签范围配置","index":"3.2"},{"title":"3.3 Bean生命周期配置","id":"3-3-Bean生命周期配置","index":"3.3"},{"title":"3.4 Bean实例化三种方式","id":"3-4-Bean实例化三种方式","index":"3.4"},{"title":"3.5 Bean的依赖注入入门","id":"3-5-Bean的依赖注入入门","index":"3.5"},{"title":"3.6 Bean的依赖注入概念","id":"3-6-Bean的依赖注入概念","index":"3.6"},{"title":"3.7 Bean的依赖注入方式","id":"3-7-Bean的依赖注入方式","index":"3.7"},{"title":"3.8 Bean的依赖注入的数据类型","id":"3-8-Bean的依赖注入的数据类型","index":"3.8"},{"title":"3.9 引入其他配置文件（分模块开发）","id":"3-9-引入其他配置文件（分模块开发）","index":"3.9"}]},{"title":"4. spring相关API","id":"4-spring相关API","index":"4","children":[{"title":"4.1 ApplicationContext的继承体系","id":"4-1-ApplicationContext的继承体系","index":"4.1"},{"title":"4.2 ApplicationContext的实现类","id":"4-2-ApplicationContext的实现类","index":"4.2"},{"title":"4.3 getBean()方法使用","id":"4-3-getBean-方法使用","index":"4.3"}]},{"title":"5.Spring配置数据源","id":"5-Spring配置数据源","index":"5","children":[{"title":"5.1 数据源（连接池）的作用","id":"5-1-数据源（连接池）的作用","index":"5.1"},{"title":"5.2 数据源的手动创建","id":"5-2-数据源的手动创建","index":"5.2"},{"title":"5.3 Spring配置数据源","id":"5-3-Spring配置数据源","index":"5.3"},{"title":"5.4 抽取jdbc配置文件","id":"5-4-抽取jdbc配置文件","index":"5.4"},{"title":"5.5 知识要点","id":"5-5-知识要点","index":"5.5"}]},{"title":"6. Spring注解开发","id":"6-Spring注解开发","index":"6","children":[{"title":"6.1 Spring原始注解","id":"6-1-Spring原始注解","index":"6.1"},{"title":"6.2 Spring新注解","id":"6-2-Spring新注解","index":"6.2"}]},{"title":"7. Spring整合Junit","id":"7-Spring整合Junit","index":"7","children":[{"title":"7.1 原始Junit测试Spring的问题","id":"7-1-原始Junit测试Spring的问题","index":"7.1"},{"title":"7.2 上述问题解决思路","id":"7-2-上述问题解决思路","index":"7.2"},{"title":"7.3 Spring集成Junit步骤","id":"7-3-Spring集成Junit步骤","index":"7.3"},{"title":"7.4 Spring集成Junit代码实现","id":"7-4-Spring集成Junit代码实现","index":"7.4"}]}],"reward":true,"copyright":{"custom":"copyright:自由转载-非商用-禁止演绎-保持署名"}}