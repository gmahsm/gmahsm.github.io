{"title":"【SpringMVC】入门&组件解析","date":"2019-09-03T03:48:06.000Z","thumbnail":null,"link":"post/【SpringMVC】入门-组件解析","tags":["SpringMVC"],"categories":["奇客工具"],"updated":"2019-09-03T03:54:56.356Z","content":"<h2 id=\"1-Spring与Web环境集成\">1. Spring与Web环境集成<a href=\"post/【SpringMVC】入门-组件解析#1-Spring与Web环境集成\"></a></h2><h3 id=\"1-1-ApplicationContext应用上下文获取方式\">1.1 ApplicationContext应用上下文获取方式<a href=\"post/【SpringMVC】入门-组件解析#1-1-ApplicationContext应用上下文获取方式\"></a></h3><p>应用上下文对象是通过new ClasspathXmlApplicationContext(spring配置文件) 方式获取的，但是每次从容器中获得Bean时都要编写new ClasspathXmlApplicationContext(spring配置文件) ，这样的弊端是配置文件加载多次，应用上下文对象创建多次。</p>\n<p>在Web项目中，可以使用ServletContextListener监听Web应用的启动，我们可以在Web应用启动时，就加载Spring的配置文件，创建应用上下文对象ApplicationContext，在将其存储到最大的域servletContext域中，这样就可以在任意位置从域中获得应用上下文ApplicationContext对象了。</p>\n<h3 id=\"1-2-Spring提供获取应用上下文的工具\">1.2 Spring提供获取应用上下文的工具<a href=\"post/【SpringMVC】入门-组件解析#1-2-Spring提供获取应用上下文的工具\"></a></h3><p>上面的分析不用手动实现，Spring提供了一个监听器ContextLoaderListener就是对上述功能的封装，该监听器内部加载Spring配置文件，创建应用上下文对象，并存储到ServletContext域中，提供了一个客户端工具WebApplicationContextUtils供使用者获得应用上下文对象。</p>\n<p>所以我们需要做的只有两件事：</p>\n<p>①在web.xml中配置ContextLoaderListener监听器（导入spring-web坐标）</p>\n<p>②使用WebApplicationContextUtils获得应用上下文对象ApplicationContext</p>\n<h3 id=\"1-3-导入Spring集成web的坐标\">1.3 导入Spring集成web的坐标<a href=\"post/【SpringMVC】入门-组件解析#1-3-导入Spring集成web的坐标\"></a></h3><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"1-4-配置ContextLoaderListener监听器\">1.4 配置ContextLoaderListener监听器<a href=\"post/【SpringMVC】入门-组件解析#1-4-配置ContextLoaderListener监听器\"></a></h3><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--全局参数--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:applicationContext.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Spring的监听器--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\">       org.springframework.web.context.ContextLoaderListener</span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"1-5-通过工具获得应用上下文对象\">1.5 通过工具获得应用上下文对象<a href=\"post/【SpringMVC】入门-组件解析#1-5-通过工具获得应用上下文对象\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationContext applicationContext =    </span><br><span class=\"line\">    WebApplicationContextUtils.getWebApplicationContext(servletContext);</span><br><span class=\"line\">    Object obj = applicationContext.getBean(<span class=\"string\">\"id\"</span>);</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>知识要点</strong></p>\n<p>Spring集成web环境步骤</p>\n<p>​      ①配置ContextLoaderListener监听器</p>\n<p>​      ②使用WebApplicationContextUtils获得应用上下文</p>\n<h2 id=\"2-SpringMVC的简介\">2. SpringMVC的简介<a href=\"post/【SpringMVC】入门-组件解析#2-SpringMVC的简介\"></a></h2><h3 id=\"2-1-SpringMVC概述\">2.1 SpringMVC概述<a href=\"post/【SpringMVC】入门-组件解析#2-1-SpringMVC概述\"></a></h3><p>SpringMVC 是一种基于 Java 的实现 MVC 设计模型的请求驱动类型的轻量级 Web 框架，属于SpringFrameWork 的后续产品，已经融合在 Spring Web Flow 中。</p>\n<p>SpringMVC 已经成为目前最主流的MVC框架之一，并且随着Spring3.0 的发布，全面超越 Struts2，成为最优秀的 MVC 框架。它通过一套注解，让一个简单的 Java 类成为处理请求的控制器，而无须实现任何接口。同时它还支持 RESTful 编程风格的请求。</p>\n<h3 id=\"2-3-SpringMVC快速入门\">2.3 SpringMVC快速入门<a href=\"post/【SpringMVC】入门-组件解析#2-3-SpringMVC快速入门\"></a></h3><p>需求：客户端发起请求，服务器端接收请求，执行逻辑并进行视图跳转。</p>\n<p><strong>开发步骤</strong></p>\n<p>①导入SpringMVC相关坐标</p>\n<p>②配置SpringMVC核心控制器DispathcerServlet</p>\n<p>③创建Controller类和视图页面</p>\n<p>④使用注解配置Controller类中业务方法的映射地址</p>\n<p>⑤配置SpringMVC核心文件 spring-mvc.xml</p>\n<p>⑥客户端发起请求测试</p>\n<p><strong>代码实现</strong></p>\n<p>①导入Spring和SpringMVC的坐标、导入Servlet和Jsp的坐标</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">&lt;!--Spring坐标--&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"> <span class=\"comment\">&lt;!--SpringMVC坐标--&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Servlet坐标--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Jsp坐标--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>②在web.xml配置SpringMVC的核心控制器</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>③创建Controller和业务方法</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuickController</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">quickMethod</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"quickMethod running.....\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"index\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>③创建视图页面index.jsp</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;h2&gt;Hello SpringMVC!&lt;/h2&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure>\n\n<p>④配置注解</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuickController</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/quick\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">quickMethod</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"quickMethod running.....\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"index\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>⑤创建spring-mvc.xml</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">\"http://www.springframework.org/schema/mvc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/mvc   </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/mvc/spring-mvc.xsd  </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context   </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context/spring-context.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置注解扫描--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.itheima\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>⑥访问测试地址</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8080/itheima_springmvc1/quick</span><br></pre></td></tr></table></div></figure>\n\n<p>控制台打印</p>\n<p><img src=\"https://i.loli.net/2019/09/03/njCKU9eJBb7ol3M.png\" alt class=\"article-img\"></p>\n<p>页面显示</p>\n<p><img src=\"https://i.loli.net/2019/09/03/G7ejcVyOBfMWuki.png\" alt class=\"article-img\"></p>\n<h3 id=\"2-3-SpringMVC流程图示\">2.3 SpringMVC流程图示<a href=\"post/【SpringMVC】入门-组件解析#2-3-SpringMVC流程图示\"></a></h3><p><img src=\"https://i.loli.net/2019/09/03/ArhVDu8ajQqMgPx.png\" alt class=\"article-img\"></p>\n<p><img src=\"https://i.loli.net/2019/09/03/sXh92HYa4RDWzpK.png\" alt class=\"article-img\"></p>\n<h3 id=\"2-4-知识要点\">2.4 知识要点<a href=\"post/【SpringMVC】入门-组件解析#2-4-知识要点\"></a></h3><p>SpringMVC的开发步骤 </p>\n<p>   ①导入SpringMVC相关坐标</p>\n<p>   ②配置SpringMVC核心控制器DispathcerServlet</p>\n<p>   ③创建Controller类和视图页面</p>\n<p>   ④使用注解配置Controller类中业务方法的映射地址</p>\n<p>   ⑤配置SpringMVC核心文件 spring-mvc.xml</p>\n<p>   ⑥客户端发起请求测试</p>\n<h2 id=\"3-SpringMVC的组件解析\">3. SpringMVC的组件解析<a href=\"post/【SpringMVC】入门-组件解析#3-SpringMVC的组件解析\"></a></h2><h3 id=\"3-1-SpringMVC的执行流程\">3.1 SpringMVC的执行流程<a href=\"post/【SpringMVC】入门-组件解析#3-1-SpringMVC的执行流程\"></a></h3><p><img src=\"https://i.loli.net/2019/09/03/7xGb2DMK5FZJBts.png\" alt class=\"article-img\"></p>\n<p>①用户发送请求至前端控制器DispatcherServlet。</p>\n<p>②DispatcherServlet收到请求调用HandlerMapping处理器映射器。</p>\n<p>③处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。</p>\n<p>④DispatcherServlet调用HandlerAdapter处理器适配器。</p>\n<p>⑤HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。</p>\n<p>⑥Controller执行完成返回ModelAndView。</p>\n<p>⑦HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。</p>\n<p>⑧DispatcherServlet将ModelAndView传给ViewReslover视图解析器。</p>\n<p>⑨ViewReslover解析后返回具体View。</p>\n<p>⑩DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。DispatcherServlet响应用户。</p>\n<h3 id=\"3-2-SpringMVC组件解析\">3.2 SpringMVC组件解析<a href=\"post/【SpringMVC】入门-组件解析#3-2-SpringMVC组件解析\"></a></h3><ol>\n<li><strong>前端控制器：DispatcherServlet</strong></li>\n</ol>\n<p>​    用户请求到达前端控制器，它就相当于 MVC 模式中的 C，DispatcherServlet 是整个流程控制的中心，由</p>\n<p>它调用其它组件处理用户的请求，DispatcherServlet 的存在降低了组件之间的耦合性。</p>\n<ol start=\"2\">\n<li><strong>处理器映射器：HandlerMapping</strong></li>\n</ol>\n<p>​    HandlerMapping 负责根据用户请求找到 Handler 即处理器，SpringMVC 提供了不同的映射器实现不同的</p>\n<p>映射方式，例如：配置文件方式，实现接口方式，注解方式等。</p>\n<ol start=\"3\">\n<li><strong>处理器适配器：HandlerAdapter</strong></li>\n</ol>\n<p>​    通过 HandlerAdapter 对处理器进行执行，这是适配器模式的应用，通过扩展适配器可以对更多类型的处理</p>\n<p>器进行执行。</p>\n<ol start=\"4\">\n<li><strong>处理器：Handler</strong></li>\n</ol>\n<p>​    它就是我们开发中要编写的具体业务控制器。由 DispatcherServlet 把用户请求转发到 Handler。由</p>\n<p>Handler 对具体的用户请求进行处理。</p>\n<ol start=\"5\">\n<li><strong>视图解析器：View Resolver</strong></li>\n</ol>\n<p>​    View Resolver 负责将处理结果生成 View 视图，View Resolver 首先根据逻辑视图名解析成物理视图名，即具体的页面地址，再生成 View 视图对象，最后对 View 进行渲染将处理结果通过页面展示给用户。</p>\n<ol start=\"6\">\n<li><strong>视图：View</strong></li>\n</ol>\n<p>​    SpringMVC 框架提供了很多的 View 视图类型的支持，包括：jstlView、freemarkerView、pdfView等。最常用的视图就是 jsp。一般情况下需要通过页面标签或页面模版技术将模型数据通过页面展示给用户，需要由程序员根据业务需求开发具体的页面</p>\n<h3 id=\"3-3-SpringMVC注解解析\">3.3 SpringMVC注解解析<a href=\"post/【SpringMVC】入门-组件解析#3-3-SpringMVC注解解析\"></a></h3><p>@RequestMapping</p>\n<p>作用：用于建立请求 URL 和处理请求方法之间的对应关系</p>\n<p>位置：</p>\n<p>​      类上，请求URL 的第一级访问目录。此处不写的话，就相当于应用的根目录</p>\n<p>​      方法上，请求 URL 的第二级访问目录，与类上的使用@ReqquestMapping标注的一级目录一起组成访问虚拟路径</p>\n<p>属性：</p>\n<p>​      value：用于指定请求的URL。它和path属性的作用是一样的</p>\n<p>​      method：用于指定请求的方式</p>\n<p>​      params：用于指定限制请求参数的条件。它支持简单的表达式。要求请求参数的key和value必须和配置的一模一样</p>\n<p>例如：</p>\n<p>​      params = {“accountName”}，表示请求参数必须有accountName</p>\n<p>​      params = {“moeny!100”}，表示请求参数中money不能是100</p>\n<p>1.mvc命名空间引入</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命名空间：xmlns:context=\"http://www.springframework.org/schema/context\"</span><br><span class=\"line\">        xmlns:mvc=\"http://www.springframework.org/schema/mvc\"</span><br><span class=\"line\">约束地址：http://www.springframework.org/schema/context</span><br><span class=\"line\">        http://www.springframework.org/schema/context/spring-context.xsd</span><br><span class=\"line\">        http://www.springframework.org/schema/mvc </span><br><span class=\"line\">        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span><br></pre></td></tr></table></div></figure>\n\n<p>2.<br>组件扫描</p>\n<p>SpringMVC基于Spring容器，所以在进行SpringMVC操作时，需要将Controller存储到Spring容器中，如果使用@Controller注解标注的话，就需要使用&lt;context:component-scan base-package=“com.itheima.controller”/&gt;进行组件扫描。</p>\n<h3 id=\"3-4-SpringMVC的XML配置解析\">3.4 SpringMVC的XML配置解析<a href=\"post/【SpringMVC】入门-组件解析#3-4-SpringMVC的XML配置解析\"></a></h3><p>SpringMVC有默认组件配置，默认组件都是DispatcherServlet.properties配置文件中配置的，该配置文件地址org/springframework/web/servlet/DispatcherServlet.properties，该文件中配置了默认的视图解析器，如下：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.springframework.web.servlet.ViewResolver=org.springframework.web.servlet.view.InternalResourceViewResolver</span><br></pre></td></tr></table></div></figure>\n\n<p>翻看该解析器源码，可以看到该解析器的默认设置，如下：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REDIRECT_URL_PREFIX = &quot;redirect:&quot;  --重定向前缀</span><br><span class=\"line\">FORWARD_URL_PREFIX = &quot;forward:&quot;    --转发前缀（默认值）</span><br><span class=\"line\">prefix = &quot;&quot;;     --视图名称前缀</span><br><span class=\"line\">suffix = &quot;&quot;;     --视图名称后缀</span><br></pre></td></tr></table></div></figure>\n\n<ol>\n<li>视图解析器</li>\n</ol>\n<p>我们可以通过属性注入的方式修改视图的的前后缀</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置内部资源视图解析器--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.servlet.view.InternalResourceViewResolver\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prefix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"/WEB-INF/views/\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suffix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".jsp\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"3-5-知识要点\">3.5 知识要点<a href=\"post/【SpringMVC】入门-组件解析#3-5-知识要点\"></a></h3><p><strong>SpringMVC的相关组件</strong> </p>\n<p>前端控制器：DispatcherServlet</p>\n<p>处理器映射器：HandlerMapping</p>\n<p>处理器适配器：HandlerAdapter</p>\n<p>处理器：Handler</p>\n<p>视图解析器：View Resolver</p>\n<p>视图：View</p>\n<p><strong>SpringMVC的注解和配置</strong> </p>\n<p>请求映射注解：@RequestMapping</p>\n<p>视图解析器配置：</p>\n<p>REDIRECT_URL_PREFIX = “redirect:”  </p>\n<p>FORWARD_URL_PREFIX = “forward:”    </p>\n<p>prefix = “”;     </p>\n<p>suffix = “”;     </p>\n","prev":{"title":"【SpringMVC】请求&响应","link":"post/【SpringMVC】请求-响应"},"next":{"title":"【Spring】AOP","link":"post/【Spring】AOP"},"plink":"https://gmahsm.github.io/post/【SpringMVC】入门-组件解析/","toc":[{"title":"1. Spring与Web环境集成","id":"1-Spring与Web环境集成","index":"1","children":[{"title":"1.1 ApplicationContext应用上下文获取方式","id":"1-1-ApplicationContext应用上下文获取方式","index":"1.1"},{"title":"1.2 Spring提供获取应用上下文的工具","id":"1-2-Spring提供获取应用上下文的工具","index":"1.2"},{"title":"1.3 导入Spring集成web的坐标","id":"1-3-导入Spring集成web的坐标","index":"1.3"},{"title":"1.4 配置ContextLoaderListener监听器","id":"1-4-配置ContextLoaderListener监听器","index":"1.4"},{"title":"1.5 通过工具获得应用上下文对象","id":"1-5-通过工具获得应用上下文对象","index":"1.5"}]},{"title":"2. SpringMVC的简介","id":"2-SpringMVC的简介","index":"2","children":[{"title":"2.1 SpringMVC概述","id":"2-1-SpringMVC概述","index":"2.1"},{"title":"2.3 SpringMVC快速入门","id":"2-3-SpringMVC快速入门","index":"2.2"},{"title":"2.3 SpringMVC流程图示","id":"2-3-SpringMVC流程图示","index":"2.3"},{"title":"2.4 知识要点","id":"2-4-知识要点","index":"2.4"}]},{"title":"3. SpringMVC的组件解析","id":"3-SpringMVC的组件解析","index":"3","children":[{"title":"3.1 SpringMVC的执行流程","id":"3-1-SpringMVC的执行流程","index":"3.1"},{"title":"3.2 SpringMVC组件解析","id":"3-2-SpringMVC组件解析","index":"3.2"},{"title":"3.3 SpringMVC注解解析","id":"3-3-SpringMVC注解解析","index":"3.3"},{"title":"3.4 SpringMVC的XML配置解析","id":"3-4-SpringMVC的XML配置解析","index":"3.4"},{"title":"3.5 知识要点","id":"3-5-知识要点","index":"3.5"}]}],"reward":true,"copyright":{"custom":"copyright:自由转载-非商用-禁止演绎-保持署名"}}