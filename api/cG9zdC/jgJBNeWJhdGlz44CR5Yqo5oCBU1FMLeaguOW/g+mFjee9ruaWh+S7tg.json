{"title":"【Mybatis】动态SQL&核心配置文件","date":"2019-09-10T01:29:40.000Z","thumbnail":null,"link":"post/【Mybatis】动态SQL-核心配置文件","tags":["Mybatis"],"categories":["奇客工具"],"updated":"2019-09-10T01:33:34.583Z","content":"<p>只需要写dao层接口，不需要写接口实现。Mybatis 框架会自动创建接口的动态代理对象。但是要满足规范</p>\n<p><img src=\"https://i.loli.net/2019/09/04/69ChPuW7qYsUkbz.png\" alt class=\"article-img\"></p>\n<a id=\"more\"></a>\n\n<h3 id=\"1-Mybatis的Dao层实现\">1.Mybatis的Dao层实现<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-Mybatis的Dao层实现\"></a></h3><h4 id=\"1-1-传统开发方式\">1.1 传统开发方式<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-1-传统开发方式\"></a></h4><h5 id=\"1-1-1编写UserDao接口\">1.1.1编写UserDao接口<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-1-1编写UserDao接口\"></a></h5><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">List&lt;User&gt; <span class=\"title\">findAll</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"1-1-2-编写UserDaoImpl实现\">1.1.2.编写UserDaoImpl实现<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-1-2-编写UserDaoImpl实现\"></a></h5><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">findAll</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        InputStream resourceAsStream = </span><br><span class=\"line\">                    Resources.getResourceAsStream(<span class=\"string\">\"SqlMapConfig.xml\"</span>);</span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> </span><br><span class=\"line\">                    SqlSessionFactoryBuilder().build(resourceAsStream);</span><br><span class=\"line\">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">        List&lt;User&gt; userList = sqlSession.selectList(<span class=\"string\">\"userMapper.findAll\"</span>);</span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"1-1-3-测试传统方式\">1.1.3 测试传统方式<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-1-3-测试传统方式\"></a></h5><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTraditionDao</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    UserDao userDao = <span class=\"keyword\">new</span> UserDaoImpl();</span><br><span class=\"line\">    List&lt;User&gt; all = userDao.findAll();</span><br><span class=\"line\">    System.out.println(all);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"1-2-代理开发方式\">1.2 代理开发方式<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-2-代理开发方式\"></a></h4><h5 id=\"1-2-1-代理开发方式介绍\">1.2.1 代理开发方式介绍<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-2-1-代理开发方式介绍\"></a></h5><p>采用 Mybatis 的代理开发方式实现 DAO 层的开发，这种方式是我们后面进入企业的主流。</p>\n<p>Mapper 接口开发方法只需要程序员编写Mapper 接口（相当于Dao 接口），由Mybatis 框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。</p>\n<p>Mapper 接口开发需要遵循以下规范：</p>\n<p><strong>1) Mapper.xml文件中的namespace与mapper接口的全限定名相同</strong></p>\n<p><strong>2) Mapper接口方法名和Mapper.xml中定义的每个statement的id相同</strong></p>\n<p><strong>3) Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同</strong></p>\n<p><strong>4) Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同</strong></p>\n<h5 id=\"1-2-2-编写UserMapper接口\">1.2.2 编写UserMapper接口<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-2-2-编写UserMapper接口\"></a></h5><p><img src=\"https://i.loli.net/2019/09/04/69ChPuW7qYsUkbz.png\" alt class=\"article-img\"></p>\n<h5 id=\"1-2-3测试代理方式\">1.2.3测试代理方式<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-2-3测试代理方式\"></a></h5><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testProxyDao</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    InputStream resourceAsStream = Resources.getResourceAsStream(<span class=\"string\">\"SqlMapConfig.xml\"</span>);</span><br><span class=\"line\">    SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(resourceAsStream);</span><br><span class=\"line\">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class=\"line\">  UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    User user = userMapper.findById(<span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(user);</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"1-3-知识小结\">1.3 知识小结<a href=\"post/【Mybatis】动态SQL-核心配置文件#1-3-知识小结\"></a></h4><p>MyBatis的Dao层实现的两种方式：</p>\n<p>手动对Dao进行实现：传统开发方式</p>\n<p><strong>代理方式对Dao进行实现：</strong></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**UserMapper userMapper = sqlSession.getMapper(UserMapper.class);**</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"2-MyBatis映射文件深入\">2.MyBatis映射文件深入<a href=\"post/【Mybatis】动态SQL-核心配置文件#2-MyBatis映射文件深入\"></a></h3><h4 id=\"2-1-动态sql语句\">2.1 动态sql语句<a href=\"post/【Mybatis】动态SQL-核心配置文件#2-1-动态sql语句\"></a></h4><h5 id=\"2-1-1动态sql语句概述\">2.1.1动态sql语句概述<a href=\"post/【Mybatis】动态SQL-核心配置文件#2-1-1动态sql语句概述\"></a></h5><p>Mybatis 的映射文件中，前面我们的 SQL 都是比较简单的，有些时候业务逻辑复杂时，我们的 SQL是动态变化的，此时在前面的学习中我们的 SQL 就不能满足要求了。</p>\n<p>参考的官方文档，描述如下：</p>\n<p><img src=\"https://i.loli.net/2019/09/04/9ajYpwKG7kBxyr8.png\" alt class=\"article-img\"></p>\n<h5 id=\"2-1-2动态-SQL-之-lt-if-gt\">2.1.2动态 SQL  之&lt;<strong>if&gt;</strong><a href=\"post/【Mybatis】动态SQL-核心配置文件#2-1-2动态-SQL-之-lt-if-gt\"></a></h5><p>我们根据实体类的不同取值，使用不同的 SQL语句来进行查询。比如在 id如果不为空时可以根据id查询，如果username 不同空时还要加入用户名作为条件。这种情况在我们的多条件组合查询中经常会碰到。</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findByCondition\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"user\"</span>&gt;</span></span><br><span class=\"line\">    select * from User</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"id!=0\"</span>&gt;</span></span><br><span class=\"line\">            and id=#&#123;id&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"username!=null\"</span>&gt;</span></span><br><span class=\"line\">            and username=#&#123;username&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>当查询条件id和username都存在时，控制台打印的sql语句如下：</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   … … …</span><br><span class=\"line\">   <span class=\"comment\">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class=\"line\">UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">  User condition = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">  condition.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">  condition.setUsername(<span class=\"string\">\"lucy\"</span>);</span><br><span class=\"line\">  User user = userMapper.findByCondition(condition);</span><br><span class=\"line\">  … … …</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"https://i.loli.net/2019/09/04/e9sR8ZHmbNXfcnO.png\" alt class=\"article-img\"></p>\n<p>当查询条件只有id存在时，控制台打印的sql语句如下：</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> … … …</span><br><span class=\"line\"> <span class=\"comment\">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class=\"line\">UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">User condition = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">condition.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">User user = userMapper.findByCondition(condition);</span><br><span class=\"line\">… … …</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"https://i.loli.net/2019/09/04/yAnrDmuK4ZOqLYC.png\" alt class=\"article-img\"></p>\n<h5 id=\"2-1-3-动态-SQL-之-lt-foreach-gt\">2.1.3 动态 SQL  之&lt;<strong>foreach&gt;</strong><a href=\"post/【Mybatis】动态SQL-核心配置文件#2-1-3-动态-SQL-之-lt-foreach-gt\"></a></h5><p>循环执行sql的拼接操作，例如：SELECT * FROM USER WHERE id IN (1,2,5)。</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findByIds\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"list\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"user\"</span>&gt;</span></span><br><span class=\"line\">    select * from User</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">\"array\"</span> <span class=\"attr\">open</span>=<span class=\"string\">\"id in(\"</span> <span class=\"attr\">close</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">item</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">separator</span>=<span class=\"string\">\",\"</span>&gt;</span></span><br><span class=\"line\">            #&#123;id&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>测试代码片段如下：</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> … … …</span><br><span class=\"line\"> <span class=\"comment\">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class=\"line\">UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\"><span class=\"keyword\">int</span>[] ids = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">2</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">List&lt;User&gt; userList = userMapper.findByIds(ids);</span><br><span class=\"line\">System.out.println(userList);</span><br><span class=\"line\">… … …</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"https://i.loli.net/2019/09/04/2hNHiXzrYP3B4fL.png\" alt class=\"article-img\"></p>\n<p>foreach标签的属性含义如下：</p>\n<p><foreach>标签用于遍历集合，它的属性：</foreach></p>\n<p>•collection：代表要遍历的集合元素，注意编写时不要写#{}</p>\n<p>•open：代表语句的开始部分</p>\n<p>•close：代表结束部分</p>\n<p>•item：代表遍历集合的每个元素，生成的变量名</p>\n<p>•sperator：代表分隔符s</p>\n<h4 id=\"2-2-SQL片段抽取\">2.2 SQL片段抽取<a href=\"post/【Mybatis】动态SQL-核心配置文件#2-2-SQL片段抽取\"></a></h4><p>Sql 中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--抽取sql片段简化编写--&gt;</span></span><br><span class=\"line\">&lt;sql id=\"selectUser\" select * from User&lt;/sql&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"user\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"selectUser\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span> where id=#&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findByIds\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"list\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"user\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"selectUser\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">\"array\"</span> <span class=\"attr\">open</span>=<span class=\"string\">\"id in(\"</span> <span class=\"attr\">close</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">item</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">separator</span>=<span class=\"string\">\",\"</span>&gt;</span></span><br><span class=\"line\">            #&#123;id&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"2-3-知识小结\">2.3 知识小结<a href=\"post/【Mybatis】动态SQL-核心配置文件#2-3-知识小结\"></a></h4><p>MyBatis映射文件配置：</p>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span>：查询</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span>&gt;</span>：插入</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span>&gt;</span>：修改</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span>&gt;</span>：删除</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span>：where条件</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span>&gt;</span>：if判断</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">foreach</span>&gt;</span>：循环</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span>&gt;</span>：sql片段抽取</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"3-MyBatis核心配置文件深入\">3. MyBatis核心配置文件深入<a href=\"post/【Mybatis】动态SQL-核心配置文件#3-MyBatis核心配置文件深入\"></a></h3><h4 id=\"3-1typeHandlers标签\">3.1typeHandlers标签<a href=\"post/【Mybatis】动态SQL-核心配置文件#3-1typeHandlers标签\"></a></h4><p>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。下表描述了一些默认的类型处理器（截取部分）。</p>\n<p><img src=\"https://i.loli.net/2019/09/04/PJ693CDMgvnoTKI.png\" alt class=\"article-img\"></p>\n<p>你可以重写类型处理器或创建你自己的类型处理器来处理不支持的或非标准的类型。具体做法为：实现 org.apache.ibatis.type.TypeHandler 接口， 或继承一个很便利的类 org.apache.ibatis.type.BaseTypeHandler， 然后可以选择性地将它映射到一个JDBC类型。例如需求：一个Java中的Date数据类型，我想将之存到数据库的时候存成一个1970年至今的毫秒数，取出来时转换成java的Date，即java的Date与数据库的varchar毫秒值之间转换。</p>\n<p>开发步骤：</p>\n<p>①定义转换类继承类BaseTypeHandler<t></t></p>\n<p>②覆盖4个未实现的方法，其中setNonNullParameter为java程序设置数据到数据库的回调方法，getNullableResult为查询时 mysql的字符串类型转换成 java的Type类型的方法</p>\n<p>③在MyBatis核心配置文件中进行注册</p>\n<p>测试转换是否正确</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDateTypeHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseTypeHandler</span>&lt;<span class=\"title\">Date</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNonNullParameter</span><span class=\"params\">(PreparedStatement preparedStatement, <span class=\"keyword\">int</span> i, Date date, JdbcType type)</span> </span>&#123;</span><br><span class=\"line\">        preparedStatement.setString(i,date.getTime()+<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, String s)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Date(resultSet.getLong(s));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, <span class=\"keyword\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Date(resultSet.getLong(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getNullableResult</span><span class=\"params\">(CallableStatement callableStatement, <span class=\"keyword\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> callableStatement.getDate(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--注册类型自定义转换器--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeHandlers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeHandler</span> <span class=\"attr\">handler</span>=<span class=\"string\">\"com.itheima.typeHandlers.MyDateTypeHandler\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">typeHandler</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>测试添加操作：</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.setBirthday(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">userMapper.add2(user);</span><br></pre></td></tr></table></div></figure>\n\n<p>数据库数据：</p>\n<p><img src=\"https://i.loli.net/2019/09/04/5JH7Kxvr6BniXmk.png\" alt class=\"article-img\"></p>\n<p>测试查询操作：</p>\n<p>​    </p>\n<p><img src=\"https://i.loli.net/2019/09/04/Bu5KbHOjtXwrQqf.png\" alt class=\"article-img\"></p>\n<h4 id=\"3-2-plugins标签\">3.2 plugins标签<a href=\"post/【Mybatis】动态SQL-核心配置文件#3-2-plugins标签\"></a></h4><p>MyBatis可以使用第三方的插件来对功能进行扩展，分页助手PageHelper是将分页的复杂操作进行封装，使用简单的方式即可获得分页的相关数据</p>\n<p>开发步骤：</p>\n<p>①导入通用PageHelper的坐标</p>\n<p>②在mybatis核心配置文件中配置PageHelper插件</p>\n<p>③测试分页数据获取</p>\n<h5 id=\"①导入通用PageHelper坐标\">①导入通用PageHelper坐标<a href=\"post/【Mybatis】动态SQL-核心配置文件#①导入通用PageHelper坐标\"></a></h5><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 分页助手 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.jsqlparser<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsqlparser<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"②在mybatis核心配置文件中配置PageHelper插件\">②在mybatis核心配置文件中配置PageHelper插件<a href=\"post/【Mybatis】动态SQL-核心配置文件#②在mybatis核心配置文件中配置PageHelper插件\"></a></h5><figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 注意：分页助手的插件  配置在通用馆mapper之前 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">interceptor</span>=<span class=\"string\">\"com.github.pagehelper.PageHelper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定方言 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dialect\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"mysql\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<h5 id=\"③测试分页代码实现\">③测试分页代码实现<a href=\"post/【Mybatis】动态SQL-核心配置文件#③测试分页代码实现\"></a></h5><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testPageHelper</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置分页参数</span></span><br><span class=\"line\">    PageHelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;User&gt; select = userMapper2.select(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(User user : select)&#123;</span><br><span class=\"line\">        System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>获得分页相关的其他参数</strong></p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其他分页的数据</span></span><br><span class=\"line\">PageInfo&lt;User&gt; pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;User&gt;(select);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"总条数：\"</span>+pageInfo.getTotal());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"总页数：\"</span>+pageInfo.getPages());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"当前页：\"</span>+pageInfo.getPageNum());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"每页显示长度：\"</span>+pageInfo.getPageSize());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"是否第一页：\"</span>+pageInfo.isIsFirstPage());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"是否最后一页：\"</span>+pageInfo.isIsLastPage());</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"3-3-知识小结\">3.3 知识小结<a href=\"post/【Mybatis】动态SQL-核心配置文件#3-3-知识小结\"></a></h4><p>MyBatis核心配置文件常用标签：</p>\n<p>1、properties标签：该标签可以加载外部的properties文件</p>\n<p>2、typeAliases标签：设置类型别名</p>\n<p>3、environments标签：数据源环境配置标签</p>\n<p>4、typeHandlers标签：配置自定义类型处理器</p>\n<p>5、plugins标签：配置MyBatis的插件</p>\n","prev":{"title":"【Mybatis】多表查询&SSM整合","link":"post/【Mybatis】多表查询-SSM整合"},"next":{"title":"【Mybatis】入门","link":"post/【Mybatis】入门"},"plink":"https://gmahsm.github.io/post/【Mybatis】动态SQL-核心配置文件/","reward":true,"copyright":{"custom":"copyright:自由转载-非商用-禁止演绎-保持署名"}}