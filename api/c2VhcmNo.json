[{"title":"为什么要使用zookeeperr","date":"2019-07-25T18:48:15.000Z","updated":"2019-07-26T06:00:18.199Z","content":"随着大型互联网的发展，分布式系统应用越来越来越广泛，zookeeper成了分布式系统的标配。集群容错，动态负载均衡，动态扩容，异地多活等架构都依赖于zookeeper而搭建。\n\n\n上面的内容能够显示，此处的内容不进如文章是看不到的\n","plink":"https://gmahsm.github.io/post/为什么要使用zookeeperr/"},{"title":"Hello World","date":"2019-07-25T15:55:29.864Z","updated":"2019-07-25T16:11:04.811Z","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","plink":"https://gmahsm.github.io/post/hello-world/"},{"title":"hexo博客文章图片显示问题","date":"2019-07-24T23:25:12.000Z","updated":"2019-07-25T06:54:29.080Z","content":"问题：github+hexo搭建的博客，一篇博客上传到github后图片不能正常显示\n原因：文章中的图片不能被读取到→图片路径不对\n解决方法：3步\n将hexo配置文件_config.yml 中post_asset_folder设置成true。\n 设置完成后，再次新建文件时，Hexo会自动建立一个与文章同名的文件夹，可以把与该文章相关的所有资源都放到那个文件夹，\n\n安装一个图片插件，\n 在hexo的目录下执行下面命令\n\n\n1npm install https://github.com/CodeFalling/hexo-asset-image --save\n\n效果如下图：\n\n\n博客插入图片方式\n\n![图片标题](文章同名文件夹/图片名称.jpg)\n","plink":"https://gmahsm.github.io/post/hexo博客文章图片显示问题/"},{"title":"使用hexo-github搭建个人博客","date":"2019-07-24T16:04:43.000Z","updated":"2019-07-26T08:21:55.249Z","content":"注册账号地址：https://github.com\n创建GitHub page\ngithub page的域名形式是固定的\n\n测试\n安装git for windows下载地址：https://gitforwindows.org/。或者搜索 “git for win“\n\n默认选项安装即可安装路径根据自己使用习惯设置\n测试在命令行窗口输入 git 命令，如下图所示即为安装成功\n\n安装node.js下载地址：https://nodejs.org/en/。或者百度搜索 “node.js”\n下载左面的稳定版本\n\n默认选项安装即可安装路径根据自己使用习惯设置\n测试在命令行窗口使用”node -v”命令，显示版本号表示安装成功。如下图\n\nhexo本地使用地址：https://hexo.io/zh-cn/。或者百度搜索&quot;hexo&quot;，即可搜索到安装指令。\n\n安装在d盘新建文件夹’blog’(用户自定义)，使用命令行进入blog文件夹\n12345$  npm install hexo-cli -g    安装hexo$  hexo init blog             初始化该文件夹$  cd blog                    进入初始化完成的文件夹$  npm install\t\t\t\t   安装依赖（所需要的组件）$  hexo s             开启服务器（默认端口：4000，如果端口冲突可以使用 hexo s -p xxx自定义端口\n\n按照顺序依次执行上面指令。完成后访问localhost:4000(端口)。访问到页面表示安装成功。\n参照\n\n成功后访问页面\n将Hexo与github page联系起来git bash：在windows系统下使用git命令的模拟终端（windows自带的cmd功能太弱)\n\n进入blog文件夹，右键，Git Base Here，然后执行登录命令\n\n 12git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱&quot;\n\n\n在命令行或终端中使用下面的命令设置git自己的名字和电子邮件。这是因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。\n\n效果如下：\n\n本地git与github之间需要通过ssh密钥来连接，需先生成一个密钥，命令如下：\n\n1ssh-keygen -t rsa -C &quot;邮箱&quot;\n\n\n 中间会遇到停顿 ，输入“回车”默认即可，（参考链接：ssh代理详解）\n\n\n\n进入文件夹C:\\Users\\Administrator.ssh，会看到得到的两个文件：\n\n\n\nid_rsa是私钥， id_rsa.pub是密钥\n\n\nssh代理\n\n12eval &quot;$(ssh-agent -s)&quot;\t启动ssh代理ssh-agentssh-add ~/.ssh/id_rsa\t将私钥添加到ssh代理\n\n\nssh代理是一个程序，它可以帮助我们管理私钥，ssh- agent即为ssh代理程序那么什么时候需要ssh代理帮助我们管理私钥呢？当遇到如下情况时，我们会需要ssh代理。    1、不用到处部署私钥使用不同的密钥连接到不同的主机时，需要手动指定对应的密钥，ssh代理可以帮助我们选择对应的密钥进行认证，不用手动指定密钥即可进行连接。    2、不用重复输入密码 当私钥设置了密码，我们又需要频繁的使用私钥进行认证时，ssh代理可以帮助我们免去重复的输入密码的操作。\n\n\n登陆github，点击头像下的settings，添加ssh:\n\n\n\n新建new ssh key，将id_rsa.pub(记事本打开即可)文件里的内容复制进去：\n\n\n\n执行以下指令，测试添加ssh是否成功\n\n1ssh -T git@github.com\n\n​    看到红框标注是自己的用户名表示添加成功\n\n\n进入blog文件夹，找到_config.yml配置文件，修改下面两处\n\n\n\n\n yml对缩进和空格要求很严格，每个英文冒号后面必须有一个空格，该缩进的地方必须要有缩进（比如图2的后三行代码）：\n\n\n创建博客\n  直接使用Markdown编辑器编辑文章，然后存入blog文件夹下的source_posts文件夹；\n 然后执行以下命令\n\n\n12npm install hexo-deployer-git --save\t\t安装hexo-deployer-git扩展插件 hexo d -g\t\t生成静态页面并部署到github上\n\n浏览器访问http://用户名.github.io\n参考链接：hexo官方文档\n搭建步骤参考\nssh代理详解\n","plink":"https://gmahsm.github.io/post/使用hexo-github搭建个人博客 - 副本/"}]